/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rpgsystem;

import java.util.Scanner;
import java.io.File;
import java.util.LinkedList;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author Faleon
 */
public class NewGameGUI extends javax.swing.JFrame {

    private LinkedList<Profession> professions = new LinkedList<>();

    /**
     * Creates new form NewGameGUI
     */
    public NewGameGUI() {
        initComponents();

        File file = new File("professions.txt");
        LinkedList<String> professionTitles = new LinkedList<>();
        try (Scanner input = new Scanner(file)) {
            while (input.hasNext()) {
                String[] line = input.nextLine().split(",");
                professionTitles.add(line[0]);

                professions.add(new Profession(line[0], Integer.parseInt(line[1]),
                        Integer.parseInt(line[2]), Integer.parseInt(line[3]),
                        Integer.parseInt(line[4]), Integer.parseInt(line[5]),
                        Integer.parseInt(line[6])));
            }
        } catch (Exception ex) {
            System.out.println(ex.toString());
        }
        Vector<String> vector = new Vector<String>(professionTitles);
        DefaultComboBoxModel model = new DefaultComboBoxModel(vector);
        professionComboBox.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gameModeBtnGroup = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        professionComboBox = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        normalRadioButton = new javax.swing.JRadioButton();
        cheatRadioButton = new javax.swing.JRadioButton();
        createButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setName("Character Creation"); // NOI18N
        setPreferredSize(new java.awt.Dimension(400, 325));
        setResizable(false);
        setSize(new java.awt.Dimension(400, 300));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("CREATE A CHARACTER");

        jLabel2.setText("Character's Name");

        jLabel3.setText("Character's Profession");

        professionComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Warrior", "Babarian", "Archer", "Wizard" }));

        jLabel4.setText("Game Mode");

        gameModeBtnGroup.add(normalRadioButton);
        normalRadioButton.setSelected(true);
        normalRadioButton.setText("Normal");

        gameModeBtnGroup.add(cheatRadioButton);
        cheatRadioButton.setText("Cheat");

        createButton.setText("Create Character");
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        resetButton.setText("Reset Form");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(professionComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 200, Short.MAX_VALUE)
                        .addComponent(nameTextField, javax.swing.GroupLayout.Alignment.LEADING))
                    .addComponent(jLabel4)
                    .addComponent(normalRadioButton)
                    .addComponent(cheatRadioButton)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(createButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(professionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(normalRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cheatRadioButton)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createButton)
                    .addComponent(cancelButton)
                    .addComponent(resetButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed
        // TODO add your handling code here:
        //selected profession
        Profession selectedProfession = professions.get(
                professionComboBox.getSelectedIndex());

        //give sleceted profession attacks
        int attackCount;
        String[] line;
        File file;
        switch (professionComboBox.getSelectedIndex()) {
            case 0:
                file = new File("professionAttacks/warrior.txt");
                try (Scanner input = new Scanner(file)) {
                    attackCount = 0;
                    while (input.hasNext() && attackCount < 4) {
                        line = input.nextLine().split(",");
                        selectedProfession.addAttack(new Attack(
                                Integer.parseInt(line[0]),
                                line[1]));
                        attackCount++;
                    }

                    while (input.hasNext()) {
                        line = input.nextLine().split(",");
                        selectedProfession.addAttack(new Physical(
                                Integer.parseInt(line[0]),
                                line[1],
                                Integer.parseInt(line[2])));
                    }
                } catch (Exception ex) {
                    System.out.println(ex.toString());
                }
                break;
            case 1:
                file = new File("professionAttacks/barbarian.txt");
                try (Scanner input = new Scanner(file)) {
                    attackCount = 0;
                    while (input.hasNext() && attackCount < 4) {
                        line = input.nextLine().split(",");
                        selectedProfession.addAttack(new Attack(
                                Integer.parseInt(line[0]),
                                line[1]));
                        attackCount++;
                    }

                    while (input.hasNext()) {
                        line = input.nextLine().split(",");
                        selectedProfession.addAttack(new Physical(
                                Integer.parseInt(line[0]),
                                line[1],
                                Integer.parseInt(line[2])));
                    }
                } catch (Exception ex) {
                    System.out.println(ex.toString());
                }
                break;
            case 2:
                file = new File("professionAttacks/archer.txt");
                try (Scanner input = new Scanner(file)) {
                    attackCount = 0;
                    while (input.hasNext() && attackCount < 4) {
                        line = input.nextLine().split(",");
                        selectedProfession.addAttack(new Attack(
                                Integer.parseInt(line[0]),
                                line[1]));
                        attackCount++;
                    }

                    while (input.hasNext()) {
                        line = input.nextLine().split(",");
                        selectedProfession.addAttack(new Physical(
                                Integer.parseInt(line[0]),
                                line[1],
                                Integer.parseInt(line[2])));
                    }
                } catch (Exception ex) {
                    System.out.println(ex.toString());
                }
                break;
            case 3:
                file = new File("professionAttacks/wizard.txt");
                try (Scanner input = new Scanner(file)) {
                    attackCount = 0;
                    while (input.hasNext() && attackCount < 2) {
                        line = input.nextLine().split(",");
                        selectedProfession.addAttack(new Attack(
                                Integer.parseInt(line[0]),
                                line[1]));
                        attackCount++;
                    }

                    while (input.hasNext()) {
                        line = input.nextLine().split(",");
                        selectedProfession.addAttack(new Magical(
                                Integer.parseInt(line[0]),
                                line[1],
                                Integer.parseInt(line[2])));
                    }
                } catch (Exception ex) {
                    System.out.println(ex.toString());
                }
                break;
        }

        //normal mode character creation
        if (normalRadioButton.isSelected()) {
            RPGSystem.setActiveCharacter(new Character(nameTextField.getText(),
                    selectedProfession));
        } else {
            //cheater mode character creation
            RPGSystem.setActiveCharacter(new Character(
                    99, 99, 99, 99999, 99, nameTextField.getText(), 9999999,
                    99999, selectedProfession));
        }

        //save character
        RPGSystem.saveCharacter();

        //open dungeon menu GUI
        RPGSystem.removeGUI(this);
        DungeonGUI dungeonMenu = new DungeonGUI();
        RPGSystem.addGUI(dungeonMenu);
        dungeonMenu.setVisible(true);
        dungeonMenu.setLocationRelativeTo(null);
        dispose();

    }//GEN-LAST:event_createButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        // TODO add your handling code here:
        nameTextField.setText(null);
        professionComboBox.setSelectedIndex(0);
        normalRadioButton.setSelected(true);
        cheatRadioButton.setSelected(false);
    }//GEN-LAST:event_resetButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        RPGSystem.removeGUI(this);
        RPGSystem.getMainMenu().setVisible(true);
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewGameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewGameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewGameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewGameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewGameGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JRadioButton cheatRadioButton;
    private javax.swing.JButton createButton;
    private javax.swing.ButtonGroup gameModeBtnGroup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JRadioButton normalRadioButton;
    private javax.swing.JComboBox<String> professionComboBox;
    private javax.swing.JButton resetButton;
    // End of variables declaration//GEN-END:variables
}
